'use strict';

/**
 * Средство от бессонницы
 *
 * «Раз дракон. Два дракон. Три дракон», — считала принцесса.
 * У нее была бессонница, а считать барашков ей надоело еще в девять лет.
 * Впрочем, считать драконов просто так тоже было скучно, поэтому она развлекалась как могла.
 * Этой ночью она представляла, что все посчитанные драконы явились сюда, чтобы ее украсть,
 * а она отбивается от них, как может. Каждого k-ого дракона она била сковородкой по морде.
 * Каждому l-ому — прищемляла хвост балконной дверью. Каждому m-ому — наступала на лапу острым каблучком.
 * Наконец, каждому n-ому она грозила позвать мамочку, и он в ужасе ретировался.
 *
 * Скольким воображаемым драконам успела нанести моральный или физический ущерб принцесса,
 * если всего она насчитала d драконов?
 *
 * Входные данные содержат целые числа k, l, m, n и d (1 ≤ k, l, m, n ≤ 10, 1 ≤ d ≤ 105).
 * Выведите количество пострадавших драконов.
 */

var dragonCountTests = [
    {
        parameters: [1, 2, 3, 4, 12],
        expectedResult: 12
    },
    {
        parameters: [2, 3, 4, 5, 24],
        expectedResult: 17
    }
];

function dragonCount(k, l, m, n, d) {
    var arrK = [];
    var arrL = [];
    var arrM = [];
    var arrN = [];
    var result = 0;

    for (var i = 0; i < d; i++) {
        arrK[i] = 0;
        arrL[i] = 0;
        arrM[i] = 0;
        arrN[i] = 0;
    }
    for (var kk = k - 1; kk < d; kk = kk + k) {
        arrK [kk] = 1;
    }
    for (var ll = l - 1; ll < d; ll = ll + l) {
        arrL [ll] = 1;
    }
    for (var mm = m - 1; mm < d; mm = mm + m) {
        arrM [mm] = 1;
    }
    for (var nn = n - 1; nn < d; nn = nn + n) {
        arrN [nn] = 1;
    }
    for (var j = 0; j < d; j++) {
        if ((arrK[j] || arrL[j] || arrM[j] || arrN[j]) === 1) {
            result = result + 1;
        }
    }
    return result;
}


tasks.push({
    title: "Средство от бессонницы",
    solution: dragonCount,
    tests: dragonCountTests
});
